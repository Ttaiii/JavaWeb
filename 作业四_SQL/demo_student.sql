USE SCHOOL_MESSAGE;

/*1. 查询所有学生的信息。*/
SELECT * FROM STUDENT;

/*2. 查询所有课程的信息。*/
SELECT * FROM COURSE;

/*3. 查询所有学生的姓名、学号和班级。*/
SELECT NAME,STUDENT_ID,MY_CLASS FROM STUDENT;

/*4. 查询所有教师的姓名和职称。*/
SELECT TEACHER.NAME,TITLE FROM TEACHER;

/*5. 查询不同课程的平均分数。*/
SELECT C.COURSE_NAME,AVG(SCORE) AS AVG_SCORE
FROM COURSE C
JOIN SCORE S ON C.COURSE_ID=S.COURSE_ID
GROUP BY COURSE_NAME;

/*6. 查询每个学生的平均分数。*/
SELECT S.NAME,AVG(SCORE) AS AVG_SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
GROUP BY S.NAME;

/*7. 查询分数大于85分的学生学号和课程号。*/
SELECT STUDENT_ID,COURSE_ID
FROM SCORE
WHERE SCORE>85;

/*8. 查询每门课程的选课人数。*/
SELECT C.COURSE_NAME,COUNT(STUDENT_ID) AS STUDENT_COUNT
FROM COURSE C 
JOIN SCORE S ON C.COURSE_ID=S.COURSE_ID
GROUP BY COURSE_NAME;

/*9. 查询选修了"高等数学"课程的学生姓名和分数。*/
SELECT S.NAME,SC.SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
JOIN COURSE C ON SC.COURSE_ID=C.COURSE_ID
WHERE C.COURSE_NAME='高等数学';

/*10. 查询没有选修"大学物理"课程的学生姓名。*/
SELECT NAME
FROM STUDENT
WHERE STUDENT_ID NOT IN(
	SELECT STUDENT_ID 
    FROM SCORE
    WHERE COURSE_ID IN(
		SELECT COURSE_ID 
        FROM COURSE 
        WHERE COURSE_NAME='大学物理'
    )
);

/*11. 查询C001比C002课程成绩高的学生信息及课程分数。*/
/*SELECT STUDENT.*,SCORE
FROM STUDENT
JOIN SCORE ON STUDENT.STUDENT_ID=SCORE.STUDENT_ID
WHERE COURSE_ID='C001' AND SCORE>(
	SELECT SCORE
    FROM SCORE
    WHERE COURSE_ID='C002'
);*/
/* --> 子查询可能返回多行，导致主查询无法正常执行。可以使用 JOIN 或者更精确的子查询来解决这个问题 */
SELECT S.*,SC1.SCORE AS C001_SCORE,SC2.SCORE AS C002_SCORE
FROM STUDENT S
JOIN SCORE SC1 ON S.STUDENT_ID=SC1.STUDENT_ID AND SC1.COURSE_ID='C001'
JOIN SCORE SC2 ON S.STUDENT_ID=SC2.STUDENT_ID AND SC2.COURSE_ID='C002'
WHERE SC1.SCORE>SC2.SCORE;

/*12. 统计各科成绩各分数段人数：课程编号，课程名称，[100-85]，[85-70]，[70-60]，[60-0] 及所占百分比*/
/*

*/
SELECT C.COURSE_ID,C.COURSE_NAME,
	COUNT(CASE WHEN SC.SCORE BETWEEN 85 AND 100 THEN 1 END) AS '[100-85]',
    COUNT(CASE WHEN SC.SCORE BETWEEN 70 AND 84 THEN 1 END) AS '[85-70]',
	COUNT(CASE WHEN SC.SCORE BETWEEN 60 AND 69 THEN 1 END) AS '[70-60]',
	COUNT(CASE WHEN SC.SCORE < 60 THEN 1 END) AS '[60-0]',
	COUNT(*) AS TOTAL_STUDENTS,
    (COUNT(CASE WHEN SC.SCORE BETWEEN 85 AND 100 THEN 1 END) * 100.0 / COUNT(*)) AS PERCENT_100_85,
	(COUNT(CASE WHEN SC.SCORE BETWEEN 70 AND 84 THEN 1 END) * 100.0 / COUNT(*)) AS PERCENT_85_70,
    (COUNT(CASE WHEN SC.SCORE BETWEEN 60 AND 69 THEN 1 END) * 100.0 / COUNT(*)) AS PERCENT_70_60,
    (COUNT(CASE WHEN SC.SCORE < 60 THEN 1 END) * 100.0 / COUNT(*)) AS PERCENT_60_0
FROM COURSE C
JOIN SCORE SC ON C.COURSE_ID=SC.COURSE_ID
GROUP BY C.COURSE_ID,C.COURSE_NAME;
 /*   
WITH SCORECOUNTS AS(
	SELECT C.COURSE_ID,C.COURSE_NAME,
		COUNT(CASE WHEN SC.SCORE BETWEEN 85 AND 100 THEN 1 END) AS '100-85',
		COUNT(CASE WHEN SC.SCORE BETWEEN 70 AND 84 THEN 1 END) AS '85-70',
		COUNT(CASE WHEN SC.SCORE BETWEEN 60 AND 69 THEN 1 END) AS '70-60',
		COUNT(CASE WHEN SC.SCORE < 60 THEN 1 END) AS '60-0',
		COUNT(*) AS TOTAL_STUDENTS
        FROM COURSE C
        JOIN SCORE SC ON C.COURSE_ID=SC.COURSE_ID
        GROUP BY C.COURSE_ID,C.COURSE_NAME
)
SELECT 
	COURSE_ID,Z
    COURSE_NAME,
    '100-85',
    '85-70',
    '70-60',
    '60-0',
    TOTAL_STUDENTS,
	('100-85' * 100.0 / TOTAL_STUDENTS) AS PERCENT_100_85,
    ('85-70' * 100.0 / TOTAL_STUDENTS) AS PERCENT_85_70,
    ('70-60' * 100.0 / TOTAL_STUDENTS) AS PERCENT_70_60,
    ('60-0' * 100.0 / TOTAL_STUDENTS) AS PERCENT_60_0
FROM SCORECOUNTS;
*/

/*13. 查询选择C002课程但没选择C004课程的成绩情况(不存在时显示为 NULL )。*/
SELECT S.STUDENT_ID,S.NAME,SC2.SCORE AS C002_SCORE,SC4.SCORE AS C004_SCORE
FROM STUDENT S
LEFT JOIN SCORE SC2 ON S.STUDENT_ID=SC2.STUDENT_ID AND SC2.COURSE_ID='C002'
LEFT JOIN SCORE SC4 ON S.STUDENT_ID=SC4.STUDENT_ID AND SC4.COURSE_ID='C004'
WHERE SC4.SCORE IS NULL AND SC2.SCORE IS NOT NULL;

/*14. 查询平均分数最高的学生姓名和平均分数。*/
SELECT S.NAME,AVG(SCORE) AS AVG_SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
GROUP BY S.STUDENT_ID,S.NAME
ORDER BY AVG_SCORE DESC
LIMIT 1;

/*15. 查询总分最高的前三名学生的姓名和总分。*/
SELECT S.NAME,SUM(SC.SCORE) AS TOTAL_SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
GROUP BY S.NAME,S.STUDENT_ID
ORDER BY TOTAL_SCORE DESC
LIMIT 3;

/*16. 查询各科成绩最高分、最低分和平均分。要求如下：
以如下形式显示：课程 ID，课程 NAME，最高分，最低分，平均分，及格率，中等率，优良率，优秀率
及格为>=60，中等为：70-80，优良为：80-90，优秀为：>=90
要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列*/
SELECT C.COURSE_ID AS '课程ID',
	   C.COURSE_NAME AS '课程NAME',
       MAX(SCORE) AS '最高分',
       MIN(SCORE) AS '最低分',
       AVG(SCORE) AS '平均分',
       SUM(CASE WHEN SC.SCORE>=60 THEN 1 END) / COUNT(*) AS '及格率',
       SUM(CASE WHEN SC.SCORE BETWEEN 70 AND 80 THEN 1 END) / COUNT(*) AS '中等率',
       SUM(CASE WHEN SC.SCORE BETWEEN 80 AND 90 THEN 1 END) / COUNT(*) AS '优良率',
       SUM(CASE WHEN SC.SCORE>=90 THEN 1 END) / COUNT(*) AS '优秀率'
FROM COURSE C
JOIN SCORE SC ON C.COURSE_ID=SC.COURSE_ID
GROUP BY C.COURSE_ID,C.COURSE_NAME
ORDER BY COUNT(*) DESC,
C.COURSE_ID ASC;

/*17. 查询男生和女生的人数。*/
SELECT GENDER,COUNT(*) AS GENDER_COUNT
FROM STUDENT
GROUP BY GENDER;

/*18. 查询年龄最大的学生姓名。*/
SELECT S.NAME
FROM STUDENT S
ORDER BY BIRTH_DATE 
LIMIT 1;

/*19. 查询年龄最小的教师姓名。*/
SELECT T.NAME
FROM TEACHER T
ORDER BY T.BIRTH_DATE DESC
LIMIT 1;

/*20. 查询学过「张教授」授课的同学的信息。*/
SELECT S.*
FROM STUDENT S
LEFT JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
LEFT JOIN COURSE C ON SC.COURSE_ID=C.COURSE_ID
LEFT JOIN TEACHER T ON  C.TEACHER_ID=T.TEACHER_ID
WHERE T.NAME='张教授';

/*21. 查询查询至少有一门课与学号为"2021001"的同学所学相同的同学的信息 。*/
/*子查询*/
SELECT S.*
FROM STUDENT S
JOIN(
	SELECT DISTINCT SC.STUDENT_ID
    FROM SCORE SC 
    JOIN STUDENT S ON SC.STUDENT_ID=S.STUDENT_ID
    WHERE SC.COURSE_ID IN(
		SELECT COURSE_ID
        FROM SCORE
        WHERE STUDENT_ID ='2021001'
        ) 
        AND SC.STUDENT_ID!='2021001'
        )
AS RELATED_STUDENT ON RELATED_STUDENT.STUDENT_ID = S.STUDENT_ID ;

/*JOIN EXISTS*/
SELECT DISTINCT S2.*
FROM STUDENT S2
WHERE EXISTS(
	SELECT *
    FROM SCORE SC1
    JOIN SCORE SC2 ON SC1.COURSE_ID=SC2.COURSE_ID 
    WHERE SC1.STUDENT_ID='2021001'
    AND SC2.STUDENT_ID=S2.STUDENT_ID
    AND SC2.STUDENT_ID!='2021001'
);

/*22. 查询每门课程的平均分数，并按平均分数降序排列。*/
SELECT C.COURSE_NAME,AVG(SCORE) AS AVG_SCORE 
FROM COURSE C
JOIN SCORE SC ON C.COURSE_ID=SC.COURSE_ID
GROUP BY  C.COURSE_NAME
ORDER BY AVG_SCORE;

/*23. 查询学号为"2021001"的学生所有课程的分数。*/
SELECT S.STUDENT_ID,C.COURSE_NAME,SC.SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
JOIN COURSE C ON SC.COURSE_ID=C.COURSE_ID
WHERE S.STUDENT_ID='2021001';

/*24. 查询所有学生的姓名、选修的课程名称和分数。*/
SELECT S.STUDENT_ID,S.NAME,C.COURSE_NAME,SC.SCORE
FROM STUDENT S
LEFT JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
LEFT JOIN COURSE C ON SC.COURSE_ID=C.COURSE_ID;

/*25. 查询每个教师所教授课程的平均分数。*/
SELECT T.NAME,C.COURSE_NAME,AVG(SCORE) AS AVG_SCORE
FROM TEACHER T
JOIN COURSE C ON T.TEACHER_ID=C.TEACHER_ID
JOIN SCORE SC ON C.COURSE_ID=SC.COURSE_ID
GROUP BY T.NAME,C.COURSE_NAME;

/*26. 查询分数在80到90之间的学生姓名和课程名称。*/
SELECT S.NAME,C.COURSE_NAME,SC.SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
JOIN COURSE C ON SC.COURSE_ID=C.COURSE_ID
WHERE SC.SCORE BETWEEN 80 AND 90;

/*27. 查询每个班级的平均分数。*/
SELECT S.MY_CLASS,AVG(SCORE) AS AVG_SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
GROUP BY S.MY_CLASS;

/*28. 查询没学过"王讲师"老师讲授的任一门课程的学生姓名。*/
SELECT S.NAME
FROM STUDENT S
WHERE NOT EXISTS(
	SELECT *
    FROM TEACHER T
    JOIN COURSE C ON T.TEACHER_ID=C.TEACHER_ID
    JOIN SCORE SC ON SC.COURSE_ID=C.COURSE_ID
    WHERE T.NAME='王讲师' AND SC.STUDENT_ID=S.STUDENT_ID
);

/*29. 查询两门及其以上小于85分的同学的学号，姓名及其平均成绩 。*/
SELECT S.STUDENT_ID,S.NAME,AVG(SCORE) AS AVG_SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
WHERE SC.SCORE<85
GROUP BY S.STUDENT_ID,S.NAME
HAVING COUNT(*)>=2;

/*30. 查询所有学生的总分并按降序排列。*/
SELECT S.STUDENT_ID,S.NAME,SUM(SCORE) AS TOTAL_SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
GROUP BY S.STUDENT_ID,S.NAME
ORDER BY TOTAL_SCORE DESC;

/*31. 查询平均分数超过85分的课程名称。*/
SELECT C.COURSE_NAME,AVG(SCORE) AS AVG_SCORE
FROM COURSE C
JOIN SCORE SC ON C.COURSE_ID=SC.COURSE_ID
GROUP BY C.COURSE_ID,C.COURSE_NAME
HAVING AVG(SC.SCORE)>85;

/*32. 查询每个学生的平均成绩排名。*/
/*SELECT S.STUDENT_ID,S.NAME,AVG(SCORE) AS AVG_SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
GROUP BY S.STUDENT_ID,S.NAME
ORDER BY AVG_SCORE DESC;*/
SELECT S.STUDENT_ID,
			 S.NAME,
			 AVG(SC.SCORE) AS AVG_SCORE,
			 RANK() OVER (ORDER BY AVG(SC.SCORE) DESC) AS RANK
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
GROUP BY S.STUDENT_ID,S.NAME
ORDER BY AVG_SCORE DESC;

/*33. 查询每门课程分数最高的学生姓名和分数。*/
SELECT C.COURSE_ID,C.COURSE_NAME,S.NAME,SC.SCORE
FROM COURSE C
JOIN SCORE SC ON C.COURSE_ID=SC.COURSE_ID
JOIN STUDENT S ON SC.STUDENT_ID=S.STUDENT_ID
WHERE SC.SCORE=(
	SELECT MAX(SC2.SCORE)
	FROM SCORE SC2
	WHERE SC2.COURSE_ID=SC.COURSE_ID
);

/*34. 查询选修了"高等数学"和"大学物理"的学生姓名。*/
SELECT S.STUDENT_ID,S.NAME
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
JOIN COURSE C ON SC.COURSE_ID=C.COURSE_ID
WHERE C.COURSE_NAME IN ('高等数学','大学物理')
GROUP BY S.STUDENT_ID,S.NAME
HAVING COUNT(*)=2;

/*35. 按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩（没有选课则为空）。*/
SELECT S.STUDENT_ID,S.NAME,C.COURSE_ID,C.COURSE_NAME,SCORE,
			 AVG(SCORE) OVER (PARTITION BY S.STUDENT_ID) AS AVG_SCORE
FROM STUDENT S
LEFT JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
LEFT JOIN COURSE C ON SC.COURSE_ID=C.COURSE_ID
ORDER BY S.STUDENT_ID,C.COURSE_ID; 

/*36. 查询分数最高和最低的学生姓名及其分数。*/
SELECT S.NAME,SC.SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
WHERE SC.SCORE=(
	SELECT MAX(SCORE) FROM SCORE
) OR SC.SCORE=(
	SELECT MIN(SCORE) FROM SCORE
);

/*37. 查询每个班级的最高分和最低分。*/
SELECT S.MY_CLASS,MAX(SC.SCORE) AS MAX_SCORE,MIN(SCORE) AS MIN_SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
GROUP BY S.MY_CLASS;

/*38. 查询每门课程的优秀率（优秀为90分）。*/
SELECT C.COURSE_ID,C.COURSE_NAME,
			 SUM(CASE WHEN SC.SCORE >=90 THEN 1 END) / COUNT(*) AS EXCELLENCE_RATE
FROM COURSE C
JOIN SCORE SC ON C.COURSE_ID=SC.COURSE_ID
GROUP BY C.COURSE_ID,C.COURSE_NAME;

/*39. 查询平均分数超过班级平均分数的学生。*/
-- 子查询
SELECT S1.STUDENT_ID,S1.NAME,S1.AVG_SCORE,S2.CLASS_AVG_SCORE
FROM
	(SELECT S.STUDENT_ID,S.NAME,S.MY_CLASS,AVG(SC.SCORE) AS AVG_SCORE
	 FROM STUDENT S
	 JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
	 GROUP BY S.STUDENT_ID
	) AS S1
JOIN 
	(SELECT S.MY_CLASS,AVG(SC.SCORE) AS CLASS_AVG_SCORE
	 FROM STUDENT S
	 JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
	 GROUP BY S.MY_CLASS	
	) AS S2 
ON S1.MY_CLASS=S2.MY_CLASS
WHERE S1.AVG_SCORE>S2.CLASS_AVG_SCORE;

-- 窗口函数
SELECT DISTINCT STUDENT_ID,NAME,STUDENT_AVG_SCORE,CLASS_AVG_SCORE
FROM 
		(SELECT S.STUDENT_ID,S.NAME,
					 AVG(SC.SCORE) OVER (PARTITION BY S.STUDENT_ID) AS STUDENT_AVG_SCORE,
					 AVG(SC.SCORE) OVER (PARTITION BY S.MY_CLASS) AS CLASS_AVG_SCORE
		 FROM STUDENT S
		 JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID					 
		) AS AVG
WHERE STUDENT_AVG_SCORE>CLASS_AVG_SCORE;

/*40. 查询每个学生的分数及其与课程平均分的差值。*/
SELECT SC.STUDENT_ID,C.COURSE_NAME,SC.SCORE,
			 AVG(SC.SCORE) OVER (PARTITION BY SC.COURSE_ID) AS COURSE_AVG_SCORE,
			 SC.SCORE - AVG(SC.SCORE) OVER (PARTITION BY SC.COURSE_ID) AS SCORE_DIFF
FROM SCORE SC
JOIN COURSE C ON SC.COURSE_ID=C.COURSE_ID;
			 
/*41. 查询至少有一门课程分数低于80分的学生姓名。*/
SELECT DISTINCT S.NAME
FROM STUDENT S
WHERE EXISTS (
	SELECT *
	FROM SCORE SC
	WHERE SC.STUDENT_ID=S.STUDENT_ID AND SC.SCORE<80
);

/*42. 查询所有课程分数都高于85分的学生姓名。*/
SELECT S.NAME
FROM STUDENT S
WHERE NOT EXISTS(
	SELECT *
	FROM SCORE SC 
	WHERE SC.STUDENT_ID=S.STUDENT_ID AND SC.SCORE<=85
);

/*43. 查询查询平均成绩大于等于90分的同学的学生编号和学生姓名和平均成绩。*/
SELECT DISTINCT STUDENT_ID,NAME,STUDENT_AVG_SCORE
FROM
		(	 SELECT S.STUDENT_ID,S.NAME,
							AVG(SC.SCORE) OVER (PARTITION BY S.STUDENT_ID) AS STUDENT_AVG_SCORE
			 FROM STUDENT S	
			 JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
		) AS AVG
WHERE STUDENT_AVG_SCORE>=90;

SELECT S.STUDENT_ID,S.NAME,AVG(SC.SCORE) AS AVG_SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
GROUP BY S.STUDENT_ID,S.NAME
HAVING AVG_SCORE>=90;

/*44. 查询选修课程数量最少的学生姓名。*/
SELECT S.NAME,
			 COUNT(*) OVER (PARTITION BY SC.STUDENT_ID) AS SC_COUNTS
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
GROUP BY S.STUDENT_ID,S.NAME
ORDER BY SC_COUNTS ASC
LIMIT 1;

/*45. 查询每个班级的第2名学生（按平均分数排名）。*/
SELECT S.MY_CLASS,S.STUDENT_ID,S.NAME,AVG_SCORE
FROM(
	SELECT S.MY_CLASS,S.STUDENT_ID,S.NAME,AVG(SC.SCORE) AS AVG_SCORE,
				 DENSE_RANK() OVER (PARTITION BY S.MY_CLASS ORDER BY AVG(SC.SCORE) DESC) AS RANK
  FROM STUDENT S
	JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
	GROUP BY S.STUDENT_ID,S.MY_CLASS,S.NAME
) AS RANKED_STUDENTS
WHERE RANK=2;

/*46. 查询每门课程分数前三名的学生姓名和分数。*/
SELECT S.NAME,SC.COURSE_ID,SC.SCORE
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID
WHERE (SC.COURSE_ID,SC.SCORE) IN (
	SELECT COURSE_ID,SCORE
	FROM SCORE
	WHERE RANK() OVER (PARTITION BY COURSE_ID ORDER BY SCORE DESC)<=3
);

WITH RANKEDSCORES AS (
    SELECT
        SC.COURSE_ID,
        SC.STUDENT_ID,
        SC.SCORE,
        RANK() OVER (PARTITION BY SC.COURSE_ID ORDER BY SC.SCORE DESC) AS RANK
    FROM
        SCORE SC
)
SELECT
    S.NAME,
    RS.COURSE_ID,
    RS.SCORE
FROM
    RANKEDSCORES RS
JOIN
    STUDENT S ON RS.STUDENT_ID = S.STUDENT_ID
WHERE
    RS.RANK <= 3;

/*47. 查询平均分数最高和最低的班级。*/
WITH AverageScores AS (
    SELECT 
        class_id,
        AVG(score) AS avg_score
    FROM 
        scores
    GROUP BY 
        class_id
),
MaxMinScores AS (
    SELECT 
        MAX(avg_score) AS max_avg,
        MIN(avg_score) AS min_avg
    FROM 
        AverageScores
)
SELECT 
    a.class_id,
    a.avg_score
FROM 
    AverageScores a
JOIN 
    MaxMinScores m ON a.avg_score = m.max_avg OR a.avg_score = m.min_avg
ORDER BY 
    a.avg_score DESC;  -- 可选：按平均分排序

/*WITH CLASS_AVGS AS(
	SELECT MY_CLASS,AVG(SCORE) AS AVG_SCORE
	FROM SCORE SC
	JOIN STUDENT S ON SC.STUDENT_ID=S.STUDENT_ID
	GROUP BY MY_CLASS
),RANKED_CLASS AS(
	SELECT MY_CLASS,AVG_SCORE,
				 DENSE_RANK() OVER (ORDER BY AVG_SCORE DESC) AS RANK
	 FROM CLASS_AVGS
)
SELECT MY_CLASS,AVG_SCORE
FROM RANKED_CLASS
WHERE RANK=1 OR RANK=(SELECT COUNT(*) FROM CLASS_AVGS);

WITH CLASS_AVGS AS (
    SELECT 
        MY_CLASS,
        AVG(SCORE) AS AVG_SCORE
    FROM 
        SCORE SC
    JOIN 
        STUDENT S ON SC.STUDENT_ID = S.STUDENT_ID
    GROUP BY 
        MY_CLASS
)
SELECT 
    MY_CLASS,
    AVG_SCORE
FROM 
    CLASS_AVGS
ORDER BY 
    AVG_SCORE DESC
LIMIT 1

UNION ALL

SELECT 
    MY_CLASS,
    AVG_SCORE
FROM 
    CLASS_AVGS
ORDER BY 
    AVG_SCORE ASC
LIMIT 1;

/*48. 查询每个学生的总分和他所在班级的平均分数。*/
SELECT DISTINCT S.STUDENT_ID,S.NAME,S.MY_CLASS,
			 SUM(SC.SCORE) OVER (PARTITION BY S.STUDENT_ID) AS TOTAL_SCORE,
			 AVG(SCORE) OVER (PARTITION BY S.MY_CLASS) AS CLASS_AVG_SCORE 
FROM STUDENT S
JOIN SCORE SC ON S.STUDENT_ID=SC.STUDENT_ID;

/*49. 查询每个学生的最高分的课程名称, 学生名称，成绩。*/
SELECT S.STUDENT_ID,S.NAME,C.COURSE_NAME,SC.SCORE AS HIGHEST_SCORE
FROM SCORE SC
JOIN COURSE C ON SC.COURSE_ID=C.COURSE_ID
JOIN STUDENT S ON SC.STUDENT_ID=S.STUDENT_ID
WHERE SC.SCORE=(
	SELECT MAX(SUB_SC.SCORE)
	FROM SCORE SUB_SC
	WHERE SUB_SC.STUDENT_ID=SC.STUDENT_ID
);

/*50. 查询每个班级的学生人数和平均年龄。*/
SELECT MY_CLASS,COUNT(*) AS STUDENT_COUNT,AVG(TIMESTAMPDIFF(YEAR,BIRTH_DATE,CURDATE())) AS AVG_AGE
FROM STUDENT 
GROUP BY MY_CLASS;